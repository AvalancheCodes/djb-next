@import "../assets/scss/style.scss";
// import bootstrap icons
@import "~bootstrap-icons/font/bootstrap-icons.css";
// import fontawesome icons
//@import "font-awesome/scss/font-awesome.scss";

@import "../components/header/header";
@import "../assets/vendor/font-awesome/css/all.min.css";
@import "../assets/vendor/animate/animate.min.css";
@import "tiny-slider/dist/tiny-slider.css";

// Create set of relative positioning utilities
$left: 'left';
$right: 'right';
$top: 'top';
$bottom: 'bottom';
$positions: ($left, $right, $top, $bottom);

@mixin position-object($type:"relative", $shift_direction: $left, $shift_value: 0 ){
  .relative-#{ $shift_direction }-#{ $shift_value } {
    position: #{ $type };
    // If shiftDirection is left or right, set left or right
    @if $shift_direction == $left or $shift_direction == $top {
      #{ $shift_direction }: #{ "-" + $shift_value }px;
    } @else{
      #{ $shift_direction }: #{ $shift_value }px;
    }
  }
}

// Generate 25 relative positioning utilities
@each $position in $positions {
  @for $i from 1 through 25 {
    //
    @include position-object("relative", $position, $i);
  }
}


.overall{
  position: relative;
  left: -25px;
}


.offcanvas-end.show{
  animation: 20s fadeOut;
  animation-fill-mode: forwards;
}

@keyframes fadeIn {
  90% {
    visibility: hidden;
  }
  100% {
    visibility: visible;
  }
}

@keyframes fadeOut {
  80% {
    visibility: hidden;
  }
  100% {
    visibility: visible;
  }
}

